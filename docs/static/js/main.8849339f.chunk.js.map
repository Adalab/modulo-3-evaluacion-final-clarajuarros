{"version":3,"sources":["images/Rick_and_Morty_-_logo_(English).png","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","images/alien-head-svgrepo-com.svg","images/death-skull-and-bones-svgrepo-com.svg","images/human-head-silhouette-with-cogwheels-svgrepo-com.svg","components/CharacterDetail.js","services/GetCharactersFromApi.js","components/App.js","index.js"],"names":["Filters","props","className","type","value","input","onChange","event","handleFilter","target","defaultProps","CharacterCard","to","character","id","src","image","alt","name","species","CharacterList","emptyList","characters","length","renderCharacterList","map","CharacterDetail","iconSpecie","human","alien","iconStatus","status","death","class","aria-hidden","origin","episodes","getCharactersFromApi","fetch","then","response","json","data","results","episode","App","useState","setCharacters","setInput","useEffect","filterCharacters","filter","toLowerCase","includes","sort","a","b","logo","title","exact","path","inputChange","render","parseInt","match","params","selectCharacterDetail","find","undefined","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8849339f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).de13d484.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  const handleChange = (event) => {\r\n    props.handleFilter({ value: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"Filters__form\">\r\n        <input\r\n          className=\"Filters__input\"\r\n          type=\"text\"\r\n          value={props.input} //guarda el valor que se ha introducido\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default Filters;\r\n\r\nFilters.defaultProps = {\r\n  type: \"text\",\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CharacterCard.scss\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link\r\n      className=\"CharacterCard__link\"\r\n      to={`/CharacterDetail/${props.character.id}`}\r\n    >\r\n      <article className=\"CharacterCard\">\r\n        <img\r\n          className=\"CharacterCard__img\"\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n        />\r\n        <h2 className=\"CharacterCard__description\">{props.character.name}</h2>\r\n        <p className=\"CharacterCard__description\">{props.character.species}</p>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport \"./CharacterList.scss\";\r\n\r\nconst CharacterList = (props) => {\r\n  const emptyList = props.characters.length === 0; //Si la longitud es cero está vacio\r\n\r\n  const renderCharacterList = props.characters.map((character, id) => (\r\n    <li key={id}>\r\n      <CharacterCard character={character} />\r\n    </li>\r\n  ));\r\n\r\n  const result = emptyList ? (\r\n    <p className=\"alert\">\r\n      No hay ningún pesonaje que coincida con \" {props.input} \".\r\n    </p>\r\n  ) : (\r\n    <ul className=\"CharacterList\">{renderCharacterList}</ul>\r\n  );\r\n\r\n  return result;\r\n};\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/alien-head-svgrepo-com.428af2bc.svg\";","export default __webpack_public_path__ + \"static/media/death-skull-and-bones-svgrepo-com.e4ed53f2.svg\";","export default __webpack_public_path__ + \"static/media/human-head-silhouette-with-cogwheels-svgrepo-com.a80f0897.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport \"./CharacterDetail.scss\";\r\nimport alien from \"../images/alien-head-svgrepo-com.svg\";\r\nimport death from \"../images/death-skull-and-bones-svgrepo-com.svg\";\r\nimport human from \"../images/human-head-silhouette-with-cogwheels-svgrepo-com.svg\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const iconSpecie =\r\n    props.character.species === \"Human\" ? (\r\n      <img className=\"human\" src={human} alt=\"Imagen de un hombre\" />\r\n    ) : (\r\n      <img className=\"alien\" src={alien} alt=\"Imagen de un Alien\" />\r\n    );\r\n  const iconStatus =\r\n    props.character.status === \"Dead\" ? (\r\n      <img className=\"death\" src={death} alt=\"Imagen de una calavera\" />\r\n    ) : (\r\n      \"\"\r\n    );\r\n  return (\r\n    <>\r\n      <main className=\"CharacterDetail\">\r\n        <Link className=\"CharacterDetail__link\" to=\"/\">\r\n          <i class=\"fa fa-angle-left\" aria-hidden=\"true\">\r\n            Volver\r\n          </i>\r\n        </Link>\r\n\r\n        <div className=\"CharacterDetail__image\">\r\n          <img\r\n            src={props.character.image}\r\n            alt={`Imagen de ${props.character.image}`}\r\n          />\r\n        </div>\r\n        <div className=\"CharacterDetail__detail\">\r\n          <h2>{props.character.name}</h2>\r\n          <p>\r\n            Status: {props.character.status} {iconStatus}\r\n          </p>\r\n          <p>\r\n            Species: {props.character.species} {iconSpecie}\r\n          </p>\r\n          <p>Origin: {props.character.origin}</p>\r\n          <p>Episodes: {props.character.episodes}</p>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\nexport default CharacterDetail;\r\n","const ENDPOINT = \"https://rickandmortyapi.com/api/character\";\r\n\r\nconst ENDPOINT_OPTIONAL =\r\n  \"https://raw.githubusercontent.com/Adalab/ricky-morty/master/data/rick-y-morty.json\";\r\n\r\nconst getCharactersFromApi = () => {\r\n  return fetch(ENDPOINT)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          status: character.status,\r\n          species: character.species,\r\n          image: character.image,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length, //longitud del array\r\n        };\r\n      });\r\n    });\r\n};\r\nexport default getCharactersFromApi;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport logo from \"../images/Rick_and_Morty_-_logo_(English).png\";\r\nimport Filters from \"./Filters\";\r\nimport CharacterList from \"./CharacterList\";\r\nimport CharacterDetail from \"./CharacterDetail\";\r\nimport getCharactersFromApi from \"../services/GetCharactersFromApi\";\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //hook para empezar ciclo de vida, al empezar la aplicacion web\r\n    getCharactersFromApi().then((data) => setCharacters(data)); //este data no es el de antes\r\n  }, []);\r\n\r\n  //filtrame los personajes cuyo nombre incluya el input\r\n  const filterCharacters = characters\r\n    .filter((character) => {\r\n      return character.name.toLowerCase().includes(input.toLowerCase());\r\n    })\r\n    .sort((a, b) => {\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      }\r\n      if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n      // a debe ser igual a b\r\n      return 0;\r\n    });\r\n  //alamcena la info en setInput del valor filtrado\r\n  const handleFilter = (inputChange) => {\r\n    setInput(inputChange.value);\r\n  };\r\n  //parseInt pq el id es un string y hay que pasarlo a numero\r\n  // al recargar la pagina no encuentra characters, pq el array esta vacio y tarda 120ms en llamar al fetch\r\n  //por eso lo de pagina no encontrada, po si tarda mas de lo previsto\r\n  const renderCharacterDetail = (props) => {\r\n    const id = parseInt(props.match.params.id);\r\n    const selectCharacterDetail = characters.find((character) => {\r\n      return character.id === id;\r\n    });\r\n    if (selectCharacterDetail === undefined) {\r\n      return \"El personaje que buscas no existe\";\r\n    } else {\r\n      return <CharacterDetail character={selectCharacterDetail} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App-container\">\r\n        <header className=\"App-header\">\r\n          <img\r\n            className=\"App-logo\"\r\n            src={logo}\r\n            alt=\"Logo Rick and Morty\"\r\n            title=\"Logo Rick and Morty\"\r\n          />\r\n        </header>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <section className=\"App-section-list\">\r\n              <Filters handleFilter={handleFilter} input={input} />\r\n              <CharacterList characters={filterCharacters} input={input} />\r\n            </section>\r\n          </Route>\r\n          <section className=\"App-section-detail\">\r\n            <Route path=\"/CharacterDetail/:id\" render={renderCharacterDetail} />\r\n          </section>\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}